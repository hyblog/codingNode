/*
 * celia.js v6.1.4
 * (c) 2018-2019 Jesse Feng
 * Released under the MIT License.
 */
'use strict';

require('./isNil.js');
require('./_loop.js');
require('./_bindContext.js');
var _forOwn = require('./_forOwn.js');
require('./_assign.js');
var isObject = require('./isObject.js');
var assign = require('./assign.js');

function copy(value) {
  return isObject(value)
    ? assign({}, value)
    : value;
}

var isArray = Array.isArray;
function copyDeep(value) {
  var target = value;
  if (isArray(value)) {
    target = [];
    value.forEach(function (val, i) {
      target[i] = copyDeep(val);
    });
  } else if (isObject(value)) {
    target = {};
    _forOwn(value, function (val, key) {
      target[key] = copyDeep(val);
    });
  }
  return target;
}

function looseClone (value, deep) {
  return deep ? copyDeep(value) : copy(value);
}

module.exports = looseClone;
