/*
 * celia.js v6.1.4
 * (c) 2018-2019 Jesse Feng
 * Released under the MIT License.
 */
'use strict';

var isNil = require('./isNil.js');
var _loop = require('./_loop.js');
require('./_bindContext.js');
var _forOwn = require('./_forOwn.js');
var isObject = require('./isObject.js');

function assign(target, nextSource) {
  var copy;
  !isNil(nextSource) && _forOwn(nextSource, function (nextVal, nextKey) {
    copy = target[nextKey];
    isObject(copy) && isObject(nextVal)
      ? assign(copy, nextVal)
      : (target[nextKey] = nextVal);
  });
}
function assignDeep (target) {
  if (isNil(target)) {
    throw new TypeError('Cannot convert undefined or null to object');
  }
  var to = Object(target);
  _loop(arguments, 1, arguments.length, function (nextSource) {
    assign(to, nextSource);
  });
  return to;
}

module.exports = assignDeep;
