/*
 * celia.js v6.1.4
 * (c) 2018-2019 Jesse Feng
 * Released under the MIT License.
 */
import './isNil.js';
import './_loop.js';
import './_bindContext.js';
import forOwn from './_forOwn.js';
import './_assign.js';
import isObject from './isObject.js';
import assign from './assign.js';

function copy(value) {
  return isObject(value)
    ? assign({}, value)
    : value;
}

var isArray = Array.isArray;
function copyDeep(value) {
  var target = value;
  if (isArray(value)) {
    target = [];
    value.forEach(function (val, i) {
      target[i] = copyDeep(val);
    });
  } else if (isObject(value)) {
    target = {};
    forOwn(value, function (val, key) {
      target[key] = copyDeep(val);
    });
  }
  return target;
}

function looseClone (value, deep) {
  return deep ? copyDeep(value) : copy(value);
}

export default looseClone;
