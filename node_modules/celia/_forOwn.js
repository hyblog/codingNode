/*
 * celia.js v6.1.4
 * (c) 2018-2019 Jesse Feng
 * Released under the MIT License.
 */
'use strict';

var _bindContext = require('./_bindContext.js');

// import hasOwn from './hasOwn';

function forOwn (value, iterator, context) {
  iterator = _bindContext(iterator, context);
  var keys = Object.keys(value);
  var len = keys.length;
  for (var i = 0, key = (void 0); i < len; i++) {
    key = keys[i];
    iterator(value[key], key, value) === false && (i = len);
  }
  // for (let key in value) {
  //   if (hasOwn(value, key) && iterator(value[key], key, value) === false) {
  //     break;
  //   }
  // }
}

module.exports = forOwn;
