/*
 * celia.date.js v1.0.0
 * (c) 2018-2019 Jesse Feng
 * Released under the MIT License.
 */
'use strict';

require('celia/isObject');
require('celia/_forOwn');
require('celia/isNil');
require('./_parseArray-1fad0044.js');
require('celia/_loop');
var _dateConsts = require('./_dateConsts-9a8bf1f4.js');
var _normalizeUnit = require('./_normalizeUnit-294e3505.js');
var add = require('./add.js');
var clone = require('./clone.js');
require('celia/_repeat');
require('celia/isString');
require('celia/_forEach');
require('celia/isNumber');
require('celia/isDate');
require('./_dateRegex-f187ca7c.js');
var parse = require('./parse.js');

function monthDiff(a, b) {
  var wholeMonthDiff = ((b.getFullYear() - a.getFullYear()) * 12) + (b.getMonth() - a.getMonth());
  var anchor = add(clone(a), wholeMonthDiff, _normalizeUnit.MONTH);
  var anchor2, adjust;

  if (b < anchor) {
    anchor2 = add(clone(a), wholeMonthDiff - 1, _normalizeUnit.MONTH);
    adjust = (b - anchor) / (anchor - anchor2);
  } else {
    anchor2 = add(clone(a), wholeMonthDiff + 1, _normalizeUnit.MONTH);
    adjust = (b - anchor) / (anchor2 - anchor);
  }
  return -(wholeMonthDiff + adjust) || 0;
}

function absFloor(number) {
  return number < 0 ? (Math.ceil(number) || 0) : Math.floor(number);
}

function diff (date, input, units, asFloat) {
  input = parse(input);
  var output;
  units = _normalizeUnit.normalizeUnit(units);

  switch (units) {
    case _normalizeUnit.YEAR:
      output = monthDiff(date, input) / 12;
      break;
    case _normalizeUnit.MONTH:
      output = monthDiff(date, input);
      break;
    // case 'D':
    case _normalizeUnit.DAY:
      output = (date - input) / _dateConsts.MS_OF_DAY;
      break;
    case _normalizeUnit.HOUR:
      output = (date - input) / _dateConsts.MS_OF_HOUR;
      break;
    case _normalizeUnit.MINUTE:
      output = (date - input) / _dateConsts.MS_OF_MINUTE;
      break;
    case _normalizeUnit.SECOND:
      output = (date - input) / _dateConsts.MS_OF_SECOND;
      break;
    default:
      output = date - input;
  }

  return asFloat ? output : absFloor(output);
}

module.exports = diff;
